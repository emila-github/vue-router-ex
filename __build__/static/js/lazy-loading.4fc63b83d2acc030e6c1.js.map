{"version":3,"sources":["webpack:///static/js/lazy-loading.4fc63b83d2acc030e6c1.js","webpack:///../src/lazy-loading/app.js"],"names":["webpackJsonp","module","exports","__webpack_require__","__dirname","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","use","Home","template","Foo","resolve","e","__WEBPACK_AMD_REQUIRE_ARRAY__","apply","bind","this","Bar","r","Baz","router","mode","base","routes","path","component","children","$mount","call"],"mappings":"AAAAA,cAAc,GAAG,IAEX,SAASC,EAAQC,EAASC,IAEH,SAASC,GAAY,YAUjD,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GCdxF,GAAAG,GAAAN,EAAA,GDQKO,EAAQL,EAAuBI,GCPpCE,EAAAR,EAAA,GDWKS,EAAcP,EAAuBM,ECT1CD,GAAAF,QAAIK,IAAJD,EAAAJ,QAEA,IAAMM,IAASC,SAAU,mBAgBnBC,EAAM,SAAAC,GAAA,MAAWd,GAAAe,EAAA,WAAAf,GAAQ,GAAAgB,IAAChB,EAAA,IAAcc,GDA0GG,MAAM,KAAMD,ICA7IE,KAAAC,QASjBC,EAAM,SAAAC,GAAA,MAAKrB,GAAAe,EAAA,EAAmB,iBAAMM,GAAErB,EAAQ,QAC9CsB,EAAM,SAAAD,GAAA,MAAKrB,GAAAe,EAAA,EAAmB,iBAAMM,GAAErB,EAAQ,QAE9CuB,EAAS,GAAAd,GAAAJ,SACbmB,KAAM,UACNC,KAAMxB,EACNyB,SACIC,KAAM,IAAKC,UAAWjB,IAEtBgB,KAAM,OAAQC,UAAWf,IAGzBc,KAAM,OACNC,UAAWR,EACXS,WACIF,KAAM,MAAOC,UAAWN,OAMlC,IAAAf,GAAAF,SACEkB,SACAX,mYAYCkB,OAAO,UDjBoBC,KAAKhC,EAAS","file":"static/js/lazy-loading.4fc63b83d2acc030e6c1.js","sourcesContent":["webpackJsonp([16,2],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(2);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar Home = { template: '<div>home</div>' };\n\t\n\tvar Foo = function Foo(resolve) {\n\t  return __webpack_require__.e/* require */(1, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(25)]; (resolve.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t};\n\t\n\tvar Bar = function Bar(r) {\n\t  return __webpack_require__.e/* nsure */(0, function () {\n\t    return r(__webpack_require__(23));\n\t  });\n\t};\n\tvar Baz = function Baz(r) {\n\t  return __webpack_require__.e/* nsure */(0, function () {\n\t    return r(__webpack_require__(24));\n\t  });\n\t};\n\t\n\tvar router = new _vueRouter2.default({\n\t  mode: 'history',\n\t  base: __dirname,\n\t  routes: [{ path: '/', component: Home }, { path: '/foo', component: Foo }, { path: '/bar',\n\t    component: Bar,\n\t    children: [{ path: 'baz', component: Baz }]\n\t  }]\n\t});\n\t\n\tnew _vue2.default({\n\t  router: router,\n\t  template: '\\n    <div id=\"app\">\\n      <h1>Basic</h1>\\n      <ul>\\n        <li><router-link to=\"/\">/</router-link></li>\\n        <li><router-link to=\"/foo\">/foo</router-link></li>\\n        <li><router-link to=\"/bar\">/bar</router-link></li>\\n        <li><router-link to=\"/bar/baz\">/bar/baz</router-link></li>\\n      </ul>\\n      <router-view class=\"view\"></router-view>\\n    </div>\\n  '\n\t}).$mount('#app');\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"..\\\\src\\\\lazy-loading\"))\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/lazy-loading.4fc63b83d2acc030e6c1.js","import Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nVue.use(VueRouter)\n\nconst Home = { template: '<div>home</div>' }\n\n// In Webpack we can use special require syntax to signify a \"split point\"\n// Webpack will automatically split and lazy-load the split modules.\n// - https://webpack.github.io/docs/code-splitting.html\n\n// Combine that with Vue's async components, we can easily make our route\n// components lazy-loaded only when the given route is matched.\n\n// async components are defined as:\n// - resolve => resolve(Component)\n// or\n// - () => Promise<Component>\n\n// For single component, we can use the AMD shorthand\n// require(['dep'], dep => { ... })\nconst Foo = resolve => require(['./Foo.vue'], resolve)\n\n// If using Webpack 2, you can also do:\n// const Foo = () => System.import('./Foo.vue')\n\n// If you want to group a number of components that belong to the same\n// nested route in the same async chunk, you will need to use\n// require.ensure. The 3rd argument is the chunk name they belong to -\n// modules that belong to the same chunk should use the same chunk name.\nconst Bar = r => require.ensure([], () => r(require('./Bar.vue')), '/bar')\nconst Baz = r => require.ensure([], () => r(require('./Baz.vue')), '/bar')\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: __dirname,\n  routes: [\n    { path: '/', component: Home },\n    // Just use them normally in the route config\n    { path: '/foo', component: Foo },\n    // Bar and Baz belong to the same root route\n    // and grouped in the same async chunk.\n    { path: '/bar',\n      component: Bar,\n      children: [\n        { path: 'baz', component: Baz }\n      ]\n    }\n  ]\n})\n\nnew Vue({\n  router,\n  template: `\n    <div id=\"app\">\n      <h1>Basic</h1>\n      <ul>\n        <li><router-link to=\"/\">/</router-link></li>\n        <li><router-link to=\"/foo\">/foo</router-link></li>\n        <li><router-link to=\"/bar\">/bar</router-link></li>\n        <li><router-link to=\"/bar/baz\">/bar/baz</router-link></li>\n      </ul>\n      <router-view class=\"view\"></router-view>\n    </div>\n  `\n}).$mount('#app')\n\n\n\n// WEBPACK FOOTER //\n// ../src/lazy-loading/app.js"],"sourceRoot":""}