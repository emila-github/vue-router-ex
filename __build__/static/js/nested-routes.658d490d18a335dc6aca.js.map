{"version":3,"sources":["webpack:///static/js/nested-routes.658d490d18a335dc6aca.js","webpack:///../src/nested-routes/app.js"],"names":["webpackJsonp","module","exports","__webpack_require__","__dirname","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","use","Parent","template","Default","Foo","Bar","Baz","Qux","Quy","Quux","Zap","router","mode","base","routes","path","redirect","component","children","name","$mount","call"],"mappings":"AAAAA,cAAc,GAAG,IAEX,SAASC,EAAQC,EAASC,IAEH,SAASC,GAAY,YAUjD,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GCdxF,GAAAG,GAAAN,EAAA,GDQKO,EAAQL,EAAuBI,GCPpCE,EAAAR,EAAA,GDWKS,EAAcP,EAAuBM,ECT1CD,GAAAF,QAAIK,IAAJD,EAAAJ,QAIA,IAAMM,IACJC,+HAQIC,GAAYD,SAAU,sBACtBE,GAAQF,SAAU,kBAClBG,GAAQH,SAAU,kBAClBI,GAAQJ,SAAU,kBAElBK,GACJL,2MAQIM,GACJN,2JAOIO,GAASP,SAAU,mBACnBQ,GAAQR,SAAU,+DAElBS,EAAS,GAAAZ,GAAAJ,SACbiB,KAAM,UACNC,KAAMtB,EACNuB,SACIC,KAAM,IAAKC,SAAU,YACrBD,KAAM,UAAWE,UAAWhB,EAC5BiB,WAGIH,KAAM,GAAIE,UAAWd,IAGrBY,KAAM,MAAOE,UAAWb,IAGxBW,KAAM,MAAOE,UAAWZ,IAMxBU,KAAM,OAAQE,UAAWX,IAGzBS,KAAM,aACNE,UAAWV,EACXW,WAAaH,KAAM,OAAQI,KAAM,OAAQF,UAAWR,MAGpDM,KAAM,aAAcE,UAAWT,IAE/BW,KAAM,MAAOJ,KAAM,cAAeE,UAAWP,OAMvD,IAAAb,GAAAF,SACEgB,SACAT,g3BAiBCkB,OAAO,UD7CoBC,KAAKhC,EAAS","file":"static/js/nested-routes.658d490d18a335dc6aca.js","sourcesContent":["webpackJsonp([12,2],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tvar _vue = __webpack_require__(1);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(2);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t\n\tvar Parent = {\n\t  template: '\\n    <div class=\"parent\">\\n      <h2>Parent</h2>\\n      <router-view class=\"child\"></router-view>\\n    </div>\\n  '\n\t};\n\t\n\tvar Default = { template: '<div>default</div>' };\n\tvar Foo = { template: '<div>foo</div>' };\n\tvar Bar = { template: '<div>bar</div>' };\n\tvar Baz = { template: '<div>baz</div>' };\n\t\n\tvar Qux = {\n\t  template: '\\n    <div class=\"nested-parent\">\\n      <h3>qux</h3>\\n      <router-link :to=\"{ name: \\'quux\\' }\">/quux</router-link>\\n      <router-view class=\"nested-child\"></router-view>\\n    </div>\\n  '\n\t};\n\tvar Quy = {\n\t  template: '\\n    <div class=\"nested-parent-other\">\\n      <h3>quy</h3>\\n      <pre>{{ JSON.stringify(Object.keys($route.params)) }}</pre>\\n    </div>\\n  '\n\t};\n\tvar Quux = { template: '<div>quux</div>' };\n\tvar Zap = { template: '<div><h3>zap</h3><pre>{{ $route.params.zapId }}</pre></div>' };\n\t\n\tvar router = new _vueRouter2.default({\n\t  mode: 'history',\n\t  base: __dirname,\n\t  routes: [{ path: '/', redirect: '/parent' }, { path: '/parent', component: Parent,\n\t    children: [{ path: '', component: Default }, { path: 'foo', component: Foo }, { path: 'bar', component: Bar }, { path: '/baz', component: Baz }, {\n\t      path: 'qux/:quxId',\n\t      component: Qux,\n\t      children: [{ path: 'quux', name: 'quux', component: Quux }]\n\t    }, { path: 'quy/:quyId', component: Quy }, { name: 'zap', path: 'zap/:zapId?', component: Zap }]\n\t  }]\n\t});\n\t\n\tnew _vue2.default({\n\t  router: router,\n\t  template: '\\n    <div id=\"app\">\\n      <h1>Nested Routes</h1>\\n      <ul>\\n        <li><router-link to=\"/parent\">/parent</router-link></li>\\n        <li><router-link to=\"/parent/foo\">/parent/foo</router-link></li>\\n        <li><router-link to=\"/parent/bar\">/parent/bar</router-link></li>\\n        <li><router-link to=\"/baz\">/baz</router-link></li>\\n        <li><router-link to=\"/parent/qux/123\">/parent/qux</router-link></li>\\n        <li><router-link to=\"/parent/quy/123\">/parent/quy</router-link></li>\\n        <li><router-link :to=\"{name: \\'zap\\'}\">/parent/zap</router-link></li>\\n        <li><router-link :to=\"{name: \\'zap\\', params: {zapId: 1}}\">/parent/zap/1</router-link></li>\\n        <li><router-link :to=\"{ params: { zapId: 2 }}\">{ params: { zapId: 2 }} (relative params)</router-link></li>\\n      </ul>\\n      <router-view class=\"view\"></router-view>\\n    </div>\\n  '\n\t}).$mount('#app');\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"..\\\\src\\\\nested-routes\"))\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/nested-routes.658d490d18a335dc6aca.js","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\n\r\nVue.use(VueRouter)\r\n\r\n// A route component can also contain <router-view> to render\r\n// nested children route components\r\nconst Parent = {\r\n  template: `\r\n    <div class=\"parent\">\r\n      <h2>Parent</h2>\r\n      <router-view class=\"child\"></router-view>\r\n    </div>\r\n  `\r\n}\r\n\r\nconst Default = { template: '<div>default</div>' }\r\nconst Foo = { template: '<div>foo</div>' }\r\nconst Bar = { template: '<div>bar</div>' }\r\nconst Baz = { template: '<div>baz</div>' }\r\n\r\nconst Qux = {\r\n  template: `\r\n    <div class=\"nested-parent\">\r\n      <h3>qux</h3>\r\n      <router-link :to=\"{ name: 'quux' }\">/quux</router-link>\r\n      <router-view class=\"nested-child\"></router-view>\r\n    </div>\r\n  `\r\n}\r\nconst Quy = {\r\n  template: `\r\n    <div class=\"nested-parent-other\">\r\n      <h3>quy</h3>\r\n      <pre>{{ JSON.stringify(Object.keys($route.params)) }}</pre>\r\n    </div>\r\n  `\r\n}\r\nconst Quux = { template: '<div>quux</div>' }\r\nconst Zap = { template: '<div><h3>zap</h3><pre>{{ $route.params.zapId }}</pre></div>' }\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: __dirname,\r\n  routes: [\r\n    { path: '/', redirect: '/parent' },\r\n    { path: '/parent', component: Parent,\r\n      children: [\r\n        // an empty path will be treated as the default, e.g.\r\n        // components rendered at /parent: Root -> Parent -> Default\r\n        { path: '', component: Default },\r\n\r\n        // components rendered at /parent/foo: Root -> Parent -> Foo\r\n        { path: 'foo', component: Foo },\r\n\r\n        // components rendered at /parent/bar: Root -> Parent -> Bar\r\n        { path: 'bar', component: Bar },\r\n\r\n        // NOTE absolute path here!\r\n        // this allows you to leverage the component nesting without being\r\n        // limited to the nested URL.\r\n        // components rendered at /baz: Root -> Parent -> Baz\r\n        { path: '/baz', component: Baz },\r\n\r\n        {\r\n          path: 'qux/:quxId',\r\n          component: Qux,\r\n          children: [{ path: 'quux', name: 'quux', component: Quux }]\r\n        },\r\n\r\n        { path: 'quy/:quyId', component: Quy },\r\n\r\n        { name: 'zap', path: 'zap/:zapId?', component: Zap }\r\n      ]\r\n    }\r\n  ]\r\n})\r\n\r\nnew Vue({\r\n  router,\r\n  template: `\r\n    <div id=\"app\">\r\n      <h1>Nested Routes</h1>\r\n      <ul>\r\n        <li><router-link to=\"/parent\">/parent</router-link></li>\r\n        <li><router-link to=\"/parent/foo\">/parent/foo</router-link></li>\r\n        <li><router-link to=\"/parent/bar\">/parent/bar</router-link></li>\r\n        <li><router-link to=\"/baz\">/baz</router-link></li>\r\n        <li><router-link to=\"/parent/qux/123\">/parent/qux</router-link></li>\r\n        <li><router-link to=\"/parent/quy/123\">/parent/quy</router-link></li>\r\n        <li><router-link :to=\"{name: 'zap'}\">/parent/zap</router-link></li>\r\n        <li><router-link :to=\"{name: 'zap', params: {zapId: 1}}\">/parent/zap/1</router-link></li>\r\n        <li><router-link :to=\"{ params: { zapId: 2 }}\">{ params: { zapId: 2 }} (relative params)</router-link></li>\r\n      </ul>\r\n      <router-view class=\"view\"></router-view>\r\n    </div>\r\n  `\r\n}).$mount('#app')\r\n\n\n\n// WEBPACK FOOTER //\n// ../src/nested-routes/app.js"],"sourceRoot":""}